import numpy as np
import matplotlib.pyplot as plt

def plot_phase_portrait(a, b, tau, act_mat, force_field=False):
    '''
    a, b, tau: parameters used in FitzHugh-Nagumo model
    
    act_mat: list containing two 2Darrays
        output of the class FitzHugh_Nagumo_on_network
        Activity matrix [act_v, act_w] contains the time evolution of both variables of the FitzHugh-Nagumo model

    force_field: optional
        draw arrows to show flow in phase plane
    '''
    if force_field is False:
        plt.figure(figsize=(20,20))
    
        # plot the nullclines
        x_null = np.arange(-5,5,.1) 
        y1 = [z-1./3*z**3 for z in x_null]
        y2 = [1/b*z+a/b for z in x_null]

        plt.plot(x_null,y1)
        plt.plot(x_null,y2)
    
        minv = act_mat[0].min() - 1
        maxv = act_mat[0].max() + 1
    
        minw = act_mat[1].min() - 1
        maxw = act_mat[1].max() + 1

        plt.xlim([minv, maxv])
        plt.ylim([minw, maxw])

        for i in range(int(len(adj_mat))):
            xs = act_mat[0]
            x = xs[:, i]       
            ys = act_mat[1]
            y = ys[:, i]
            plt.xlabel("v", fontsize=30)
            plt.ylabel("w", fontsize=30)
            plt.xticks(fontsize = 22)
            plt.yticks(fontsize = 22)
            plt.title('phase portrait', fontsize=35)
            plt.plot(x, y)
    
    else:
        plt.figure(figsize=(20,20))
        x, y = np.meshgrid(np.linspace(act_mat[0].min() - 1, act_mat[0].max() + 1, 25), np.linspace(act_mat[1].min() - 1, act_mat[1].max() + 1, 25))
        v = x-1./3*x**3 - y
        w = 1/tau * (x + a - b*y)
        plt.quiver(x, y, v, w)
    
        # plot the clines for v', w'
        x_null = np.arange(-5,5,.1) 
        y1 = [z-1./3*z**3 for z in x_null]
        y2 = [1/b*z+a/b for z in x_null]

        plt.plot(x_null,y1)
        plt.plot(x_null,y2)
    
        minv = act_mat[0].min() - 1
        maxv = act_mat[0].max() + 1
    
        minw = act_mat[1].min() - 1
        maxw = act_mat[1].max() + 1

        plt.xlim([minv, maxv])
        plt.ylim([minw, maxw])

        for i in range(int(len(adj_mat))):
            xs = act_mat[0]
            x = xs[:, i]       
            ys = act_mat[1]
            y = ys[:, i]
            plt.xlabel("v", fontsize=30)
            plt.ylabel("w", fontsize=30)
            plt.xticks(fontsize = 22)
            plt.yticks(fontsize = 22)
            plt.title('phase portrait', fontsize=35)
            plt.plot(x, y)

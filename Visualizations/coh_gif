import matplotlib.pyplot as plt
import seaborn as sns

def coh_gif(phase_coherence_v, simulation_run, stepsize):
    '''
    phase_coherence_v: 2d-array
        coherence measure values for every time step
        
    simulation_run: integer
        simulation run of interest to make video/GIF
    
    stepsize: integer
        after stepsize many steps the next png is created
    '''
    
    PCV_mat = phase_coherence_v[:,simulation_run]

    for t in range(0, len(PCV_mat), stepsize):   
        fig = plt.figure(figsize=(20,10))
        sns.set_style("whitegrid")
        plt.plot(PCV_mat)
        plt.axvline(x=t, color='r')
        plt.xlabel("Time t", fontsize=30)
        plt.ylabel("Phase Coherence", fontsize=30)
        plt.xticks(fontsize = 22)
        plt.yticks(fontsize = 22)
        step = start+t
        plt.title('t =%s' %step, fontsize=35)
        
        if t<100:
            plt.savefig('pngs/m_t0000%s.png' %round((t)))
        elif t<1000:
            plt.savefig('pngs/m_t000%s.png' %round((t)))
        elif t<10000:
            plt.savefig('pngs/m_t00%s.png' %round((t)))
        elif t<100000:
            plt.savefig('pngs/m_t0%s.png' %round((t)))
        else:
            plt.savefig('pngs/m_t%s.png' %round((t)))

        plt.clf()
        plt.cla()
        plt.close(fig)
